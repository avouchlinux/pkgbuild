--- messagecomposer/src/composer/composerviewbase.cpp	2021-02-12 09:14:20.000000000 +0000
+++ ../composerviewbase.cpp	2021-03-21 13:33:40.971962862 +0000
@@ -288,7 +288,7 @@
     mSendMethod = method;
     mSaveIn = saveIn;
 
-    KCursorSaver saver(Qt::WaitCursor);
+    KPIM::KCursorSaver saver(Qt::WaitCursor);
     const KIdentityManagement::Identity identity = identityManager()->identityForUoid(m_identityCombo->currentIdentity());
 
     if (identity.attachVcard() && m_attachmentController->attachOwnVcard()) {
@@ -1816,7 +1816,7 @@
     case Kleo::Ask:
     {
         // the user wants to be asked or has to be asked
-        KCursorSaver saver(Qt::WaitCursor);
+        KPIM::KCursorSaver saver(Qt::WaitCursor);
         const QString msg = i18n("Examination of the recipient's signing preferences "
                                  "yielded that you be asked whether or not to sign "
                                  "this message.\n"
@@ -1844,7 +1844,7 @@
     case Kleo::Conflict:
     {
         // warn the user that there are conflicting signing preferences
-        KCursorSaver saver(Qt::WaitCursor);
+        KPIM::KCursorSaver saver(Qt::WaitCursor);
         const QString msg = i18n("There are conflicting signing preferences "
                                  "for these recipients.\n"
                                  "Sign this message?");
@@ -1870,7 +1870,7 @@
     }
     case Kleo::Impossible:
     {
-        KCursorSaver saver(Qt::WaitCursor);
+        KPIM::KCursorSaver saver(Qt::WaitCursor);
         const QString msg = i18n("You have requested to sign this message, "
                                  "but no valid signing keys have been configured "
                                  "for this identity.");
@@ -1889,7 +1889,7 @@
 
     if (!sign || !doSignCompletely) {
         if (MessageComposer::MessageComposerSettings::self()->cryptoWarningUnsigned()) {
-            KCursorSaver saver(Qt::WaitCursor);
+            KPIM::KCursorSaver saver(Qt::WaitCursor);
             const QString msg = sign && !doSignCompletely
                                 ? i18n("Some parts of this message will not be signed.\n"
                                        "Sending only partially signed messages might violate site policy.\n"
@@ -1943,7 +1943,7 @@
     case Kleo::Ask:
     {
         // the user wants to be asked or has to be asked
-        KCursorSaver saver(Qt::WaitCursor);
+        KPIM::KCursorSaver saver(Qt::WaitCursor);
         const QString msg = opportunistic
                             ? i18n("Valid trusted encryption keys were found for all recipients.\n"
                                    "Encrypt this message?")
@@ -1978,7 +1978,7 @@
     case Kleo::Conflict:
     {
         // warn the user that there are conflicting encryption preferences
-        KCursorSaver saver(Qt::WaitCursor);
+        KPIM::KCursorSaver saver(Qt::WaitCursor);
         const QString msg = i18n("There are conflicting encryption preferences "
                                  "for these recipients.\n"
                                  "Encrypt this message?");
@@ -2004,7 +2004,7 @@
     }
     case Kleo::Impossible:
     {
-        KCursorSaver saver(Qt::WaitCursor);
+        KPIM::KCursorSaver saver(Qt::WaitCursor);
         const QString msg = i18n("You have requested to encrypt this message, "
                                  "and to encrypt a copy to yourself, "
                                  "but no valid trusted encryption keys have been "
@@ -2024,7 +2024,7 @@
 
     if (!encrypt || !doEncryptCompletely) {
         if (MessageComposer::MessageComposerSettings::self()->cryptoWarningUnencrypted()) {
-            KCursorSaver saver(Qt::WaitCursor);
+            KPIM::KCursorSaver saver(Qt::WaitCursor);
             const QString msg = !doEncryptCompletely
                                 ? i18n("Some parts of this message will not be encrypted.\n"
                                        "Sending only partially encrypted messages might violate "


--- messagecomposer/src/composer/keyresolver.cpp	2021-02-12 09:14:20.000000000 +0000
+++ ../keyresolver.cpp	2021-03-21 13:39:01.025315496 +0000
@@ -1549,7 +1549,7 @@
     std::copy(d->mSMIMEEncryptToSelfKeys.begin(), d->mSMIMEEncryptToSelfKeys.end(),
               std::back_inserter(senderKeys));
 
-    KCursorSaver saver(Qt::WaitCursor);
+    KPIM::KCursorSaver saver(Qt::WaitCursor);
 
     QPointer<Kleo::KeyApprovalDialog> dlg = new Kleo::KeyApprovalDialog(items, senderKeys);
 
@@ -1631,7 +1631,7 @@
                             : i18n("You did not select encryption keys for some of "
                                    "the recipients: these persons will not be able to "
                                    "decrypt the message if you encrypt it.");
-        KCursorSaver saver(Qt::WaitCursor);
+        KPIM::KCursorSaver saver(Qt::WaitCursor);
         if (KMessageBox::warningContinueCancel(nullptr, msg,
                                                i18n("Missing Key Warning"),
                                                KGuiItem(i18n("&Encrypt")))

--- messagecomposer/src/helper/messagefactoryng.cpp	2021-02-12 09:14:20.000000000 +0000
+++ ../messagefactoryng.cpp	2021-03-21 13:45:51.602006902 +0000
@@ -383,7 +383,7 @@
     }
 
     MessageHelper::setAutomaticFields(msg, true);
-    KCursorSaver saver(Qt::WaitCursor);
+    KPIM::KCursorSaver saver(Qt::WaitCursor);
     if (numberOfItems == 0) {
         attachments << createForwardAttachmentMessage(mOrigMsg);
         MessageComposer::Util::addLinkInformation(msg, mId, Akonadi::MessageStatus::statusForwarded());
