commit bf9d9a931dd5e64ae92f5a5b2e8da8a9768a83ec
Author: Felix Yan <felixonmars@archlinux.org>
Date:   Thu Jan 19 15:54:02 2017 +0800

    Use backports.functools_lru_cache instead of functools32
    
    It's better maintained and more widely used (by pylint, jaraco, etc).

diff --git a/INSTALL b/INSTALL
index 0a935d585..5873ad258 100644
--- a/INSTALL
+++ b/INSTALL
@@ -222,7 +222,7 @@ Required Dependencies
 Dependencies for python 2
 ^^^^^^^^^^^^^^^^^^^^^^^^^
 
-`functools32 <https://pypi.python.org/pypi/functools32>`_
+`backports.functools_lru_cache <https://pypi.python.org/pypi/backports.functools_lru_cache>`_
     Required for compatibility if running on Python 2.7.
 
 `subprocess32 <https://pypi.python.org/pypi/subprocess32/>`_
diff --git a/lib/matplotlib/font_manager.py b/lib/matplotlib/font_manager.py
index fc29500e0..581061f90 100644
--- a/lib/matplotlib/font_manager.py
+++ b/lib/matplotlib/font_manager.py
@@ -64,7 +64,7 @@ from matplotlib.fontconfig_pattern import (
 try:
     from functools import lru_cache
 except ImportError:
-    from functools32 import lru_cache
+    from backports.functools_lru_cache import lru_cache
 
 
 USE_FONTCONFIG = False
diff --git a/setup.py b/setup.py
index fbcec3677..1bd79e687 100644
--- a/setup.py
+++ b/setup.py
@@ -69,7 +69,7 @@ mpl_packages = [
     setupext.Numpy(),
     setupext.Six(),
     setupext.Dateutil(),
-    setupext.FuncTools32(),
+    setupext.BackportsFuncToolsLRUCache(),
     setupext.Subprocess32(),
     setupext.Pytz(),
     setupext.Cycler(),
diff --git a/setupext.py b/setupext.py
index 34ac8b384..e02cdde79 100644
--- a/setupext.py
+++ b/setupext.py
@@ -1523,25 +1523,25 @@ class Dateutil(SetupPackage):
         return [dateutil]
 
 
-class FuncTools32(SetupPackage):
-    name = "functools32"
+class BackportsFuncToolsLRUCache(SetupPackage):
+    name = "backports.functools_lru_cache"
 
     def check(self):
         if not PY3min:
             try:
-                import functools32
+                import backports.functools_lru_cache
             except ImportError:
                 return (
-                    "functools32 was not found. It is required for"
+                    "backports.functools_lru_cache was not found. It is required for"
                     "Python versions prior to 3.2")
 
-            return "using functools32"
+            return "using backports.functools_lru_cache"
         else:
             return "Not required"
 
     def get_install_requires(self):
         if not PY3min:
-            return ['functools32']
+            return ['backports.functools_lru_cache']
         else:
             return []
 
