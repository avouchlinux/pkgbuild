# Copyright 2010-2020 Avouch Authors
# Distributed under the terms of the GNU General Public License v2
# Maintainer: Qurban Ullah <qurbanullah@avouch.org>
# Contributor: Qurban Ullah <qurbanullah@avouch.org>

pkgbase=vim
pkgname=(vim gvim vim-runtime)
pkgver=8.2.1847
_versiondir=82
pkgrel=1
pkgdesc='Vi Improved, a highly configurable, improved version of the vi text editor'
arch=('x86_64')
groups=('sys-base')
url='https://www.vim.org'
arch=('x86_64')
license=('custom:vim')
makedepends=('glibc' 'libgcrypt' 'gpm' 'python2' 'python' 'ruby' 'libxt' 'gtk3' 'lua'
             'gawk' 'tcl' 'pcre' 'zlib' 'libffi')
source=(${pkgbase}-${pkgver}.tar.gz::https://github.com/vim/vim/archive/v${pkgver}.tar.gz
        vimrc
        archlinux.vim
        vimdoc.hook)

prepare() {
    cd vim-$pkgver/src

    # define the place for the global (g)vimrc file (set to /etc/vimrc)
    sed -i 's|^.*\(#define SYS_.*VIMRC_FILE.*"\) .*$|\1|' feature.h
    sed -i 's|^.*\(#define VIMRC_FILE.*"\) .*$|\1|' feature.h

    autoconf

    cd "$srcdir"
    cp -a vim-$pkgver gvim-$pkgver
}

build() {

    info_msg "Building vim..."
	cd "${srcdir}"/vim-$pkgver
	./configure --prefix=/usr \
	--localstatedir=/var/lib/vim \
	--with-features=huge \
	--with-compiledby='Avouch Linux' \
	--enable-gpm \
	--enable-acl \
	--with-x=no \
	--disable-gui \
	--enable-multibyte \
	--enable-cscope \
	--enable-netbeans \
	--enable-perlinterp=dynamic \
	--enable-pythoninterp=dynamic \
	--enable-python3interp=dynamic \
	--enable-rubyinterp=dynamic \
	--enable-luainterp=dynamic \
	--enable-tclinterp=dynamic
	make ${MAKEFLAGS}

	info_msg "Building gvim..."
	cd "${srcdir}"/gvim-$pkgver
	./configure --prefix=/usr \
	--localstatedir=/var/lib/vim \
	--with-features=huge \
	--with-compiledby='Avouch Linux' \
	--enable-gpm \
	--enable-acl \
	--with-x=yes \
	--enable-gui=gtk3 \
	--enable-multibyte \
	--enable-cscope \
	--enable-netbeans \
	--enable-perlinterp=dynamic \
	--enable-pythoninterp=dynamic \
	--enable-python3interp=dynamic \
	--enable-rubyinterp=dynamic \
	--enable-luainterp=dynamic \
	--enable-tclinterp=dynamic
	make ${MAKEFLAGS}

}

check() {
	cd "${srcdir}"/vim-$pkgver
	#TERM=xterm make ${MAKEFLAGS} test
}



package_vim-runtime() {
  pkgdesc='Runtime for vim and gvim'
  backup=('etc/vimrc')

  cd "${srcdir}"/vim-$pkgver

  make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" install
  # man and bin files belong to 'vim'
  rm -r "${pkgdir}"/usr/share/man/ "${pkgdir}"/usr/bin/

  # Don't forget logtalk.dict
  install -Dm644 runtime/ftplugin/logtalk.dict \
    "${pkgdir}"/usr/share/vim/vim${_versiondir}/ftplugin/logtalk.dict

  # fix FS#17216
  sed -i 's|messages,/var|messages,/var/log/messages.log,/var|' \
    "${pkgdir}"/usr/share/vim/vim${_versiondir}/filetype.vim

  # patch filetype.vim for better handling of pacman related files
  sed -i "s/rpmsave/pacsave/;s/rpmnew/pacnew/;s/,\*\.ebuild/\0,PKGBUILD*,*.install/" \
    "${pkgdir}"/usr/share/vim/vim${_versiondir}/filetype.vim
  sed -i "/find the end/,+3{s/changelog_date_entry_search/changelog_date_end_entry_search/}" \
    "${pkgdir}"/usr/share/vim/vim${_versiondir}/ftplugin/changelog.vim

  # rc files
  install -Dm644 "${srcdir}"/vimrc "${pkgdir}"/etc/vimrc
  install -Dm644 "${srcdir}"/archlinux.vim \
    "${pkgdir}"/usr/share/vim/vimfiles/archlinux.vim

  # rgb.txt file
  install -Dm644 runtime/rgb.txt \
    "${pkgdir}"/usr/share/vim/vim${_versiondir}/rgb.txt

  # no desktop files and icons
  rm -r "${pkgdir}"/usr/share/{applications,icons}

  # license
  install -dm755 "${pkgdir}"/usr/share/licenses/vim-runtime
  ln -s /usr/share/vim/vim${_versiondir}/doc/uganda.txt \
    "${pkgdir}"/usr/share/licenses/vim-runtime/license.txt
}

package_vim() {
  pkgdesc='Vi Improved, a highly configurable, improved version of the vi text editor'
  depends=("vim-runtime=${pkgver}-${pkgrel}" 'gpm' 'acl')
  optdepends=('python2: Python 2 language support'
              'python: Python 3 language support'
              'ruby: Ruby language support'
              'lua: Lua language support'
              'perl: Perl language support'
              'tcl: Tcl language support')
  conflicts=('gvim' 'vim-minimal' 'vim-python3')
  provides=('xxd' 'vim-minimal' 'vim-python3')
  replaces=('vim-python3' 'vim-minimal')

  cd "${srcdir}"/vim-$pkgver
  make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" install

  # provided by (n)vi in core
  rm "${pkgdir}"/usr/bin/{ex,view}

  # delete some manpages
  find "${pkgdir}"/usr/share/man -type d -name 'man1' 2>/dev/null | \
    while read _mandir; do
    cd ${_mandir}
    rm -f ex.1 view.1 # provided by (n)vi
    rm -f evim.1    # this does not make sense if we have no GUI
  done

  # Runtime provided by runtime package
  rm -r "${pkgdir}"/usr/share/vim

  # no desktop files and icons
  rm -r "${pkgdir}"/usr/share/{applications,icons}

  # license
  install -Dm644 runtime/doc/uganda.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/license.txt
}

package_gvim() {
  pkgdesc='Vi Improved, a highly configurable, improved version of the vi text editor (with advanced features, such as a GUI)'
  depends=("vim-runtime=${pkgver}-${pkgrel}" 'gpm' 'libxt' 'gtk2')
  optdepends=('python2: Python 2 language support'
              'python: Python 3 language support'
              'ruby: Ruby language support'
              'lua: Lua language support'
              'perl: Perl language support'
              'tcl: Tcl language support')
  provides=("vim=${pkgver}-${pkgrel}" "xxd")
  conflicts=('vim-minimal' 'vim')
  replaces=('gvim-python3')

  cd "${srcdir}"/gvim-$pkgver
  make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" install

  # provided by (n)vi in core
  rm "${pkgdir}"/usr/bin/{ex,view}

  # delete some manpages
  find "${pkgdir}"/usr/share/man -type d -name 'man1' 2>/dev/null | \
    while read _mandir; do
    cd ${_mandir}
    rm -f ex.1 view.1 # provided by (n)vi
  done

  # need to remove since this is provided by vim-runtime
  rm -r "${pkgdir}"/usr/share/vim

  # keep gvim desktop file only, remove vim
  rm "${pkgdir}"/usr/share/applications/vim.desktop

  # license
   install -Dm644 runtime/doc/uganda.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/license.txt
}
