# Copyright 2010-2022 Avouch Authors
# Distributed under the terms of the GNU General Public License v2
# Maintainer: Qurban Ullah <qurbanullah@avouch.org>
# Contributor: Qurban Ullah <qurbanullah@avouch.org>

pkgbase=llvm
pkgname=('llvm' 'llvm-libs' 'llvm-ocaml')
pkgver=14.0.0
pkgrel=1
_ocaml_ver=4.14.0
arch=('x86_64')
groups=('dev-compiler')
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('cmake' 'ninja' 'libffi' 'libedit' 'ncurses' 'libxml2'
             "ocaml>=$_ocaml_ver" 'ocaml-ctypes' 'ocaml-findlib'
             'python3-setuptools' 'python3-psutil' 'python3-sphinx'
             'python3-recommonmark')
options=('staticlibs')
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/llvm-$pkgver.src.tar.xz
        llvm-config.h)
validpgpkeys+=('B6C8F98282B944E3B0D5C2530FC3042E345AD05D') # Hans Wennborg <hans@chromium.org>
validpgpkeys+=('474E22316ABF4785A88C6E8EA2C794A986419D8A') # Tom Stellard <tstellar@redhat.com>

prepare() {
  cd "$srcdir/llvm-$pkgver.src"
  mkdir build
}

build() {
    cmake -S llvm-$pkgver.src -B build -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_HOST_TRIPLE=$CHOST \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_BUILD_TESTS=ON \
        -DLLVM_BUILD_DOCS=ON \
        -DLLVM_ENABLE_SPHINX=ON \
        -DLLVM_ENABLE_DOXYGEN=OFF \
        -DLLVM_INCLUDE_BENCHMARKS=OFF \
        -DLLVM_BUILD_BENCHMARKS=OFF \
        -DSPHINX_WARNINGS_AS_ERRORS=OFF \
        -DLLVM_BINUTILS_INCDIR=/usr/include
    ninja -C build all ocaml_doc
}

# check() {
#     ninja -C build check
# }

package_llvm() {
    pkgdesc="Collection of modular and reusable compiler and toolchain technologies"
    depends=('llvm-libs' 'perl')
    optdepends=('python-setuptools: for using lit (LLVM Integrated Tester)')


    DESTDIR="$pkgdir" ninja -C build install

    # Include lit for running tests with clang and friends
    pushd llvm-$pkgver.src/utils/lit
        python3 setup.py install --root="$pkgdir" -O1
    popd

    # Remove documentation sources
    rm -r "$pkgdir"/usr/share/doc/$pkgname/html/{_sources,.buildinfo}

    # The runtime libraries go into llvm-libs
    mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO,Remarks}*.so* "$srcdir"
    mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

    # OCaml bindings go to a separate package
    rm -rf "$srcdir"/ocaml.{lib,doc}
    mv "$pkgdir/usr/lib/ocaml" "$srcdir/ocaml.lib"
    mv "$pkgdir/usr/share/doc/$pkgname/ocaml-html" "$srcdir/ocaml.doc"

    if [[ $CARCH == x86_64 ]]; then
        # Needed for multilib (https://bugs.archlinux.org/task/29951)
        # Header stub is taken from Fedora
        mv "$pkgdir/usr/include/llvm/Config/llvm-config"{,-64}.h
        cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"
    fi

    install -Dm644 llvm-$pkgver.src/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs() {
    pkgdesc="LLVM runtime libraries"
    depends=('gcc-libs' 'zlib' 'libffi' 'libedit' 'ncurses' 'libxml2')

    install -d "$pkgdir/usr/lib"
    cp -P \
        "$srcdir"/lib{LLVM,LTO,Remarks}*.so* \
        "$srcdir"/LLVMgold.so \
        "$pkgdir/usr/lib/"

    # Symlink LLVMgold.so from /usr/lib/bfd-plugins
    # https://bugs.archlinux.org/task/28479
    install -d "$pkgdir/usr/lib/bfd-plugins"
    ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

    install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
        "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-ocaml() {
    pkgdesc="OCaml bindings for LLVM"
    depends=('llvm' "ocaml=$_ocaml_ver" 'ocaml-ctypes')

    install -d "$pkgdir"/{usr/lib,usr/share/doc/$pkgname}
    cp -a "$srcdir/ocaml.lib" "$pkgdir/usr/lib/ocaml"
    cp -a "$srcdir/ocaml.doc" "$pkgdir/usr/share/doc/$pkgname/html"

    install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
        "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
