# Copyright 2010-2022 Avouch Authors
# Distributed under the terms of the GNU General Public License v2
# Maintainer: Qurban Ullah <qurbanullah@avouch.org>
# Contributor: Qurban Ullah <qurbanullah@avouch.org>

pkgname=clang
pkgver=14.0.0
pkgrel=1
pkgdesc="C language family frontend for LLVM"
arch=('x86_64')
groups=('dev-compiler')
url="https://clang.llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
depends=('llvm-libs' 'gcc' 'compiler-rt')
makedepends=('llvm' 'cmake' 'ninja' 'python-sphinx' 'python2')
optdepends=('openmp: OpenMP support in clang with -fopenmp'
            'python: for scan-view and git-clang-format'
            'llvm: referenced by some clang headers')
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/clang-$pkgver.src.tar.xz
        https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/clang-tools-extra-$pkgver.src.tar.xz
        https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/llvm-$pkgver.src.tar.xz)
validpgpkeys+=('B6C8F98282B944E3B0D5C2530FC3042E345AD05D') # Hans Wennborg <hans@chromium.org>
validpgpkeys+=('474E22316ABF4785A88C6E8EA2C794A986419D8A') # Tom Stellard <tstellar@redhat.com>

# Utilizing LLVM_DISTRIBUTION_COMPONENTS to avoid
# installing static libraries; inspired by Gentoo
_get_distribution_components() {
  local target
  ninja -t targets | grep -Po 'install-\K.*(?=-stripped:)' | while read -r target; do
    case $target in
      clang-libraries|distribution)
        continue
        ;;
      clang-tidy-headers)
        continue
        ;;
      clang|clangd|clang-*)
        ;;
      clang*|findAllSymbols)
        continue
        ;;
    esac
    echo $target
  done
}

prepare() {
    tar -Jxf ${srcarchivedir}/llvm-${pkgver}.src.tar.xz
    tar -Jxf ${srcarchivedir}/clang-tools-extra-${pkgver}.src.tar.xz
    
    cd "$srcdir/$pkgname-$pkgver.src"
    rm -r  tools/extra
    mv "$srcdir/clang-tools-extra-$pkgver.src" tools/extra

    # build fix
    sed -i "s|../../clang/unittests/ASTMatchers/ASTMatchersTest.h|../../../unittests/ASTMatchers/ASTMatchersTest.h|" \
      tools/extra/unittests/clang-tidy/ReadabilityModuleTest.cpp

    # fix for directory path from Gentoo
    sed -e "/set(model_compiler/s:\${CMAKE_SOURCE_DIR}/\.\./clang-tools-extra/:\${CMAKE_SOURCE_DIR}/tools/extra/:" -i \
      tools/extra/clangd/quality/CompletionModel.cmake

    # patch -Np2 -i ../enable-SSP-and-PIE-by-default.patch

    # patch -Np2 -i ../fix-scan-build-py-executable-lookup-path.patch

  # Attempt to convert script to Python 3
  # 2to3 -wn --no-diffs \
  #   tools/extra/clang-include-fixer/find-all-symbols/tool/run-find-all-symbols.py
}

build() {
    local cmake_args=(
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX=/usr
        -DLLVM_LINK_LLVM_DYLIB=ON
        -DCLANG_LINK_CLANG_DYLIB=ON
        -DLLVM_ENABLE_RTTI=ON
        -DLLVM_BUILD_TESTS=ON
        -DLLVM_INCLUDE_DOCS=ON
        -DLLVM_BUILD_DOCS=ON
        -DLLVM_ENABLE_SPHINX=ON
        -DSPHINX_WARNINGS_AS_ERRORS=OFF
        -DLLVM_EXTERNAL_LIT=/usr/bin/lit
        -DLLVM_MAIN_SRC_DIR="$srcdir/llvm-$pkgver.src"
    )

    cmake -S "$pkgname-$pkgver.src" -B "build" -G Ninja "${cmake_args[@]}"
  
  
    local distribution_components=$(_get_distribution_components | paste -sd\;)
    test -n "$distribution_components"

    cmake_args+=(-DLLVM_DISTRIBUTION_COMPONENTS="$distribution_components")
    cmake -S "$pkgname-$pkgver.src" -B "build" -G Ninja "${cmake_args[@]}"

   ninja -C build

}

# check() {
#     cd "$srcdir/build"
#     ninja check-clang{,-tools}
# }

_python3_optimize() {
  python3 -m compileall "$@"
  python3 -O -m compileall "$@"
  python3 -OO -m compileall "$@"
}

package() {
  DESTDIR="$pkgdir" ninja -C build install
  install -Dm644 "$pkgname-$pkgver.src"/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/clang{,-tools}/html/{_sources,.buildinfo}

  # Move scanbuild-py into site-packages and install Python bindings
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  install -d "$pkgdir/$site_packages"
  mv "$pkgdir"/usr/lib/{libear,libscanbuild} "$pkgdir/$site_packages/"
  cp -a "$pkgname-$pkgver.src"/bindings/python/clang "$pkgdir/$site_packages/"

  # Move analyzer scripts out of /usr/libexec
  mv "$pkgdir"/usr/libexec/* "$pkgdir/usr/lib/clang/"
  rmdir "$pkgdir/usr/libexec"
  sed -i 's|libexec|lib/clang|' \
    "$pkgdir/usr/bin/scan-build" \
    "$pkgdir/$site_packages/libscanbuild/analyze.py"

  # Compile Python scripts
  _python3_optimize "$pkgdir/usr/share" "$pkgdir/$site_packages"
}
